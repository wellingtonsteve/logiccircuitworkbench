/*
 * OptionsPanel2.java
 *
 * Created on 20 February 2009, 12:14
 */

package ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import ui.command.EditLabelCommand;
import ui.components.SelectableComponent;
import ui.components.VisualComponent;
import ui.error.ErrorHandler;

/**
 *
 * @author  matt
 */
public class OptionsPanel extends javax.swing.JPanel {
    private SelectableComponent sc = null;
    private Editor editor;
    private String titleNew, titleOld;
    private java.util.ResourceBundle bundle;
    
    private double rotation = 0;

    /** Creates new form OptionsPanel2 */
    public OptionsPanel(final Editor editor) {
        this.editor = editor;
        bundle = java.util.ResourceBundle.getBundle("ui/Bundle"); // NOI18N
        initComponents();

        titleNew = bundle.getString("OptionsPanel.titleNew.text"); // NOI18N
        titleOld = bundle.getString("OptionsPanel.titleOld.text"); // NOI18N       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        titleLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        labelLabel = new javax.swing.JLabel();
        labelTextbox = new javax.swing.JTextField();
        OptionsPane = new javax.swing.JScrollPane();
        Preview = new PreviewPanel(editor);

        setPreferredSize(new java.awt.Dimension(170, 250));

        titleLabel.setText(titleNew);
        titleLabel.setName("titleLabel"); // NOI18N
        titleLabel.setForeground(new java.awt.Color(108, 108, 108));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        typeLabel.setText(bundle.getString("OptionsPanel.jLabel2.text"));
        typeLabel.setName("typeLabel"); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ui/Bundle"); // NOI18N
        labelLabel.setText(bundle.getString("OptionsPanel.labelLabel.text")); // NOI18N
        labelLabel.setName("labelLabel"); // NOI18N

        labelTextbox.setText(bundle.getString("OptionsPanel.jTextField1.text"));
        labelTextbox.setName("labelTextbox");
        labelTextbox.setPreferredSize(new java.awt.Dimension(50, 20));
        labelTextbox.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
                if(sc!=null)editor.getActiveCircuit().doCommand(new EditLabelCommand(sc, labelTextbox.getText()));
            }
        });
        labelTextbox.addFocusListener(new FocusAdapter(){
            public void focusLost(FocusEvent e) {
                if(sc!=null)editor.getActiveCircuit().doCommand(new EditLabelCommand(sc, labelTextbox.getText()));
            }
        });

        OptionsPane.setName("OptionsPane"); // NOI18N

        Preview.setName("Preview"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTextbox, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
            .addComponent(typeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
            .addComponent(OptionsPane, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
            .addComponent(Preview, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLabel)
                    .addComponent(labelTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OptionsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Preview, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addContainerGap())
        );
    }//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane OptionsPane;
    private javax.swing.JPanel Preview;
    private javax.swing.JLabel labelLabel;
    private javax.swing.JTextField labelTextbox;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables

    
    /**
     * Reset the value of the Component Label Textbox
     */
    public void resetLabel(){
        labelTextbox.setText("");
    }
    
    /**
     * Return the current value of the Component Label Textbox
     * 
     * @return The String of labelTextbox
     */
    public String getCurrentLabel(){
        return labelTextbox.getText();
    }
    
    /**
     * @return a copy of the component which this options panel displays.
     */
    public SelectableComponent getSelectableComponent(){
        return (sc!=null)?sc.copy():null;        
    }
    
    /**
     * Set the component which this panel shows. This component has already been
     * created and will normally come from a selection in the circuit workarea.
     * 
     * @param sc
     */
    public void setComponent(SelectableComponent sc){
        // Protect options panel from badly created components
        if(sc != null){
            this.sc = sc;
            titleLabel.setText((editor.getActiveCircuit().getActiveComponents().contains(sc))?titleOld:titleNew);
            typeLabel.setText(sc.getName());
            labelTextbox.setText(sc.getLabel());
            labelLabel.setEnabled(true);
            labelTextbox.setEnabled(true);
            if(sc instanceof VisualComponent){
                OptionsPane.setViewportView(sc.getOptionsPanel());
                ((PreviewPanel)Preview).setComponent(sc);
                Preview.repaint();
            }
            setVisible(true);
            editor.getActiveCircuit().repaint();
        } else {
            ErrorHandler.newError("Options Panel Error",
                    "The component that you are trying to create or select is malformed.");
        }
    }

    /**
     * Rotate the component that is displayed in this options panel, also force
     * repaints as necessary. Changes to the component here are reflected in the 
     * unfixed component in the workarea.
     * 
     * @param d
     */
    public void setComponentRotation(double d) {
        this.rotation = d;
        if(sc != null){
            sc.setRotation(rotation, false);
            ((PreviewPanel)Preview).setComponent(sc);
            Preview.repaint();
        }        
    }
    
    /**
     * @return the current rotation of the component displayed in the panel.
     */
    public Double getComponentRotation(){
        return rotation;
    }
}
