/*
 * FrameMain.java
 *
 * Created on 07 October 2008, 19:02
 */

package ui;

import java.awt.BorderLayout;
import java.awt.Point;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;
import ui.command.*;
import ui.netlist.Netlist;
import ui.tools.SelectableComponent;

/**
 *
 * @author  Matt
 */
public class Editor extends javax.swing.JFrame {
    private CircuitPanel circuitPanel;
    private LinkedList<Netlist> netlists = new LinkedList<Netlist>();
    
    /** Creates new form FrameMain */
    public Editor() {        
        addNetlist(new ui.netlist.standard.Standard());
        addNetlist(new ui.netlist.logicgates.LogicGates());
        initComponents();
        setIconImage(new javax.swing.ImageIcon(this.getClass().getResource("/ui/images/buttons/toolbar/led.png")).getImage());
        newCircuit();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Options1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Preview1 = new PreviewPanel(this);
        Toolbar = new javax.swing.JToolBar();
        NewButton = new javax.swing.JButton();
        OpenFileButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();
        SaveAsButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        ClearCircuit = new javax.swing.JButton();
        UndoButton = new javax.swing.JButton();
        RedoButton = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        MainScrollPane = new javax.swing.JScrollPane();
        DesktopPane = new ScrollableDesktop();
        Toolbox = new javax.swing.JInternalFrame();
        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane3 = new javax.swing.JSplitPane();
        jPanel4 = new javax.swing.JPanel();
        Selection = new javax.swing.JButton();
        Wire = new javax.swing.JButton();
        Wire1 = new javax.swing.JButton();
        Wire2 = new javax.swing.JButton();
        RotateLeft = new javax.swing.JButton();
        RotateRght = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        InsertComponent = new javax.swing.JButton();
        AddLabel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ComponentSelectionTree = new javax.swing.JTree();
        Options = new OptionsPanel(this);
        MenuBar = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Open = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenuItem();
        SaveAs = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        Undo = new javax.swing.JMenuItem();
        Redo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        Cut = new javax.swing.JMenuItem();
        Copy = new javax.swing.JMenuItem();
        Paste = new javax.swing.JMenuItem();
        SelectAll = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        Delete = new javax.swing.JMenuItem();
        Simulation = new javax.swing.JMenu();
        Window = new javax.swing.JMenu();
        Help = new javax.swing.JMenu();
        About = new javax.swing.JMenuItem();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ui/Bundle"); // NOI18N
        jTextField2.setText(bundle.getString("Editor.jTextField2.text")); // NOI18N

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0ᵒ", "90ᵒ", "180ᵒ", "270ᵒ" }));

        jLabel4.setText(bundle.getString("Editor.jLabel4.text")); // NOI18N

        jLabel5.setForeground(new java.awt.Color(108, 108, 108));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(bundle.getString("Editor.jLabel5.text")); // NOI18N

        org.jdesktop.layout.GroupLayout Preview1Layout = new org.jdesktop.layout.GroupLayout(Preview1);
        Preview1.setLayout(Preview1Layout);
        Preview1Layout.setHorizontalGroup(
            Preview1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 148, Short.MAX_VALUE)
        );
        Preview1Layout.setVerticalGroup(
            Preview1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 88, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout Options1Layout = new org.jdesktop.layout.GroupLayout(Options1);
        Options1.setLayout(Options1Layout);
        Options1Layout.setHorizontalGroup(
            Options1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, Options1Layout.createSequentialGroup()
                .add(Options1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, Options1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(Preview1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, Options1Layout.createSequentialGroup()
                        .add(jLabel4)
                        .add(34, 34, 34)
                        .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, Options1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        Options1Layout.setVerticalGroup(
            Options1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(Options1Layout.createSequentialGroup()
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Options1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 129, Short.MAX_VALUE)
                .add(Preview1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(bundle.getString("Editor.title")); // NOI18N
        setBounds(new java.awt.Rectangle(0, 0, 800, 600));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        Toolbar.setFloatable(false);
        Toolbar.setRollover(true);
        Toolbar.setBorderPainted(false);
        Toolbar.setMaximumSize(new java.awt.Dimension(2000, 34));
        Toolbar.setMinimumSize(new java.awt.Dimension(750, 34));
        Toolbar.setPreferredSize(new java.awt.Dimension(750, 34));

        NewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/document-new.png"))); // NOI18N
        NewButton.setText(bundle.getString("Editor.NewButton.text")); // NOI18N
        NewButton.setFocusable(false);
        NewButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NewButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        NewButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewButtonMouseClicked(evt);
            }
        });
        Toolbar.add(NewButton);

        OpenFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/document-open.png"))); // NOI18N
        OpenFileButton.setText(bundle.getString("Editor.OpenFileButton.text")); // NOI18N
        OpenFileButton.setFocusable(false);
        OpenFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        OpenFileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        OpenFileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpenFileButtonMouseClicked(evt);
            }
        });
        Toolbar.add(OpenFileButton);

        SaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/document-save.png"))); // NOI18N
        SaveButton.setText(bundle.getString("Editor.SaveButton.text")); // NOI18N
        SaveButton.setFocusable(false);
        SaveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SaveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SaveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveButtonMouseClicked(evt);
            }
        });
        Toolbar.add(SaveButton);

        SaveAsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/document-save-as.png"))); // NOI18N
        SaveAsButton.setText(bundle.getString("Editor.SaveAsButton.text")); // NOI18N
        SaveAsButton.setFocusable(false);
        SaveAsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SaveAsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SaveAsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveAsButtonMouseClicked(evt);
            }
        });
        Toolbar.add(SaveAsButton);
        Toolbar.add(jSeparator3);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/edit-cut.png"))); // NOI18N
        jButton5.setText(bundle.getString("Editor.jButton5.text")); // NOI18N
        jButton5.setEnabled(false);
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Toolbar.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/edit-copy.png"))); // NOI18N
        jButton6.setText(bundle.getString("Editor.jButton6.text")); // NOI18N
        jButton6.setEnabled(false);
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Toolbar.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/edit-paste.png"))); // NOI18N
        jButton7.setText(bundle.getString("Editor.jButton7.text")); // NOI18N
        jButton7.setEnabled(false);
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Toolbar.add(jButton7);

        ClearCircuit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/edit-clear.png"))); // NOI18N
        ClearCircuit.setText(bundle.getString("Editor.ClearCircuit.text")); // NOI18N
        ClearCircuit.setToolTipText(bundle.getString("Editor.ClearCircuit.toolTipText")); // NOI18N
        ClearCircuit.setFocusable(false);
        ClearCircuit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ClearCircuit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ClearCircuit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearCircuitMouseClicked(evt);
            }
        });
        Toolbar.add(ClearCircuit);

        UndoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/edit-undo.png"))); // NOI18N
        UndoButton.setText(bundle.getString("Editor.UndoButton.text")); // NOI18N
        UndoButton.setEnabled(false);
        UndoButton.setFocusable(false);
        UndoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        UndoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        UndoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UndoButtonMouseClicked(evt);
            }
        });
        cmdHist.addUndoEmptyListener(UndoButton);
        Toolbar.add(UndoButton);

        RedoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/edit-redo.png"))); // NOI18N
        RedoButton.setText(bundle.getString("Editor.RedoButton.text")); // NOI18N
        RedoButton.setEnabled(false);
        RedoButton.setFocusable(false);
        RedoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        RedoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        RedoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedoButtonMouseClicked(evt);
            }
        });
        cmdHist.addRedoEmptyListener(RedoButton);
        Toolbar.add(RedoButton);

        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/edit-delete.png"))); // NOI18N
        jButton19.setText(bundle.getString("Editor.jButton19.text")); // NOI18N
        jButton19.setToolTipText(bundle.getString("Editor.jButton19.toolTipText")); // NOI18N
        jButton19.setFocusable(false);
        jButton19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton19.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton19MouseClicked(evt);
            }
        });
        Toolbar.add(jButton19);
        Toolbar.add(jSeparator4);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/media-playback-stop.png"))); // NOI18N
        jButton10.setText(bundle.getString("Editor.jButton10.text")); // NOI18N
        jButton10.setEnabled(false);
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Toolbar.add(jButton10);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/media-playback-pause.png"))); // NOI18N
        jButton11.setText(bundle.getString("Editor.jButton11.text")); // NOI18N
        jButton11.setEnabled(false);
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Toolbar.add(jButton11);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/media-playback-start.png"))); // NOI18N
        jButton12.setText(bundle.getString("Editor.jButton12.text")); // NOI18N
        jButton12.setEnabled(false);
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Toolbar.add(jButton12);

        jSlider1.setMajorTickSpacing(10);
        jSlider1.setPaintTrack(false);
        jSlider1.setSnapToTicks(true);
        jSlider1.setEnabled(false);
        Toolbar.add(jSlider1);

        getContentPane().add(Toolbar);

        DesktopPane.setAutoscrolls(true);
        DesktopPane.setMinimumSize(new java.awt.Dimension(600, 400));

        Toolbox.setClosable(true);
        Toolbox.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        Toolbox.setIconifiable(true);
        Toolbox.setMaximizable(true);
        Toolbox.setResizable(true);
        Toolbox.setTitle(bundle.getString("Editor.Toolbox.title")); // NOI18N
        Toolbox.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/system-run.png"))); // NOI18N
        Toolbox.setPreferredSize(new java.awt.Dimension(163, 600));
        Toolbox.setVisible(true);

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(0.5);

        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel4.setLayout(new java.awt.GridLayout(3, 4));

        Selection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/sml_select.png"))); // NOI18N
        Selection.setText(bundle.getString("TestJFrameForm.Selection.text")); // NOI18N
        Selection.setMargin(new java.awt.Insets(2, 2, 2, 2));
        Selection.setMaximumSize(new java.awt.Dimension(26, 28));
        Selection.setMinimumSize(new java.awt.Dimension(26, 28));
        Selection.setPreferredSize(new java.awt.Dimension(26, 28));
        Selection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectionMouseClicked(evt);
            }
        });
        jPanel4.add(Selection);

        Wire.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/sml_wire.png"))); // NOI18N
        Wire.setText(bundle.getString("TestJFrameForm.Wire.text")); // NOI18N
        Wire.setToolTipText(bundle.getString("TestJFrameForm.Wire.toolTipText")); // NOI18N
        Wire.setMargin(new java.awt.Insets(2, 2, 2, 2));
        Wire.setMaximumSize(new java.awt.Dimension(26, 28));
        Wire.setMinimumSize(new java.awt.Dimension(26, 28));
        Wire.setPreferredSize(new java.awt.Dimension(26, 28));
        Wire.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WireMouseClicked(evt);
            }
        });
        jPanel4.add(Wire);

        Wire1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/sml_wire.png"))); // NOI18N
        Wire1.setText(bundle.getString("Editor.Wire1.text")); // NOI18N
        Wire1.setToolTipText(bundle.getString("Editor.Wire1.toolTipText")); // NOI18N
        Wire1.setEnabled(false);
        Wire1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        Wire1.setMaximumSize(new java.awt.Dimension(26, 28));
        Wire1.setMinimumSize(new java.awt.Dimension(26, 28));
        Wire1.setPreferredSize(new java.awt.Dimension(26, 28));
        Wire1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Wire1MouseClicked(evt);
            }
        });
        jPanel4.add(Wire1);

        Wire2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/sml_wire.png"))); // NOI18N
        Wire2.setText(bundle.getString("Editor.Wire2.text")); // NOI18N
        Wire2.setToolTipText(bundle.getString("Editor.Wire2.toolTipText")); // NOI18N
        Wire2.setEnabled(false);
        Wire2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        Wire2.setMaximumSize(new java.awt.Dimension(26, 28));
        Wire2.setMinimumSize(new java.awt.Dimension(26, 28));
        Wire2.setPreferredSize(new java.awt.Dimension(26, 28));
        Wire2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Wire2MouseClicked(evt);
            }
        });
        jPanel4.add(Wire2);

        RotateLeft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/object-rotate-left.png"))); // NOI18N
        RotateLeft.setText(bundle.getString("Editor.RotateLeft.text")); // NOI18N
        RotateLeft.setFocusable(false);
        RotateLeft.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        RotateLeft.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        RotateLeft.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RotateLeftMouseClicked(evt);
            }
        });
        jPanel4.add(RotateLeft);

        RotateRght.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/object-rotate-right.png"))); // NOI18N
        RotateRght.setText(bundle.getString("Editor.RotateRght.text")); // NOI18N
        RotateRght.setFocusable(false);
        RotateRght.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        RotateRght.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        RotateRght.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RotateRghtMouseClicked(evt);
            }
        });
        jPanel4.add(RotateRght);

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/object-rotate-right.png"))); // NOI18N
        jButton20.setText(bundle.getString("Editor.jButton20.text")); // NOI18N
        jButton20.setEnabled(false);
        jButton20.setFocusable(false);
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton20.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel4.add(jButton20);

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/object-rotate-right.png"))); // NOI18N
        jButton21.setText(bundle.getString("Editor.jButton21.text")); // NOI18N
        jButton21.setEnabled(false);
        jButton21.setFocusable(false);
        jButton21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel4.add(jButton21);

        InsertComponent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/insert-object.png"))); // NOI18N
        InsertComponent.setText(bundle.getString("Editor.InsertComponent.text")); // NOI18N
        InsertComponent.setFocusable(false);
        InsertComponent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        InsertComponent.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        InsertComponent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InsertComponentMouseClicked(evt);
            }
        });
        jPanel4.add(InsertComponent);

        AddLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/buttons/toolbar/insert-text.png"))); // NOI18N
        AddLabel.setText(bundle.getString("Editor.AddLabel.text")); // NOI18N
        AddLabel.setFocusable(false);
        AddLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AddLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AddLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddLabelMouseClicked(evt);
            }
        });
        jPanel4.add(AddLabel);

        jSplitPane3.setLeftComponent(jPanel4);

        ComponentSelectionTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                ComponentSelectionTreeValueChanged(evt);
            }
        });
        ComponentSelectionTree.setModel(getTreeValues());
        jScrollPane1.setViewportView(ComponentSelectionTree);

        jSplitPane3.setBottomComponent(jScrollPane1);

        jSplitPane1.setLeftComponent(jSplitPane3);

        org.jdesktop.layout.GroupLayout OptionsLayout = new org.jdesktop.layout.GroupLayout(Options);
        Options.setLayout(OptionsLayout);
        OptionsLayout.setHorizontalGroup(
            OptionsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 170, Short.MAX_VALUE)
        );
        OptionsLayout.setVerticalGroup(
            OptionsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 217, Short.MAX_VALUE)
        );

        jSplitPane1.setBottomComponent(Options);

        org.jdesktop.layout.GroupLayout ToolboxLayout = new org.jdesktop.layout.GroupLayout(Toolbox.getContentPane());
        Toolbox.getContentPane().setLayout(ToolboxLayout);
        ToolboxLayout.setHorizontalGroup(
            ToolboxLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
            .add(ToolboxLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(0, 170, Short.MAX_VALUE))
            .add(ToolboxLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(0, 170, Short.MAX_VALUE))
            .add(ToolboxLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(0, 170, Short.MAX_VALUE))
        );
        ToolboxLayout.setVerticalGroup(
            ToolboxLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
            .add(ToolboxLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(0, 574, Short.MAX_VALUE))
            .add(ToolboxLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(0, 574, Short.MAX_VALUE))
            .add(ToolboxLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(0, 574, Short.MAX_VALUE))
        );

        Toolbox.setBounds(0, 0, 180, 600);
        DesktopPane.add(Toolbox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        MainScrollPane.setViewportView(DesktopPane);

        getContentPane().add(MainScrollPane);

        File.setMnemonic('F');
        File.setText(bundle.getString("TestJFrameForm.jMenu1.text_1")); // NOI18N

        Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        Open.setMnemonic('o');
        Open.setText(bundle.getString("Editor.Open.text")); // NOI18N
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        File.add(Open);

        Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Save.setMnemonic('s');
        Save.setText(bundle.getString("Editor.Save.text")); // NOI18N
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        File.add(Save);

        SaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        SaveAs.setMnemonic('v');
        SaveAs.setText(bundle.getString("Editor.SaveAs.text")); // NOI18N
        SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsActionPerformed(evt);
            }
        });
        File.add(SaveAs);

        Exit.setMnemonic('x');
        Exit.setText(bundle.getString("Editor.Exit.text")); // NOI18N
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        MenuBar.add(File);

        Edit.setMnemonic('E');
        Edit.setText(bundle.getString("Editor.Edit.text")); // NOI18N

        Undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        Undo.setText(bundle.getString("Editor.Undo.text")); // NOI18N
        Undo.setEnabled(false);
        Undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoActionPerformed(evt);
            }
        });
        Edit.add(Undo);
        cmdHist.addUndoEmptyListener(Undo);

        Redo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        Redo.setText(bundle.getString("Editor.Redo.text")); // NOI18N
        Redo.setEnabled(false);
        Redo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedoActionPerformed(evt);
            }
        });
        cmdHist.addRedoEmptyListener(Redo);
        Edit.add(Redo);
        Edit.add(jSeparator1);

        Cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Cut.setText(bundle.getString("Editor.Cut.text")); // NOI18N
        Cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutActionPerformed(evt);
            }
        });
        Edit.add(Cut);

        Copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Copy.setText(bundle.getString("Editor.Copy.text")); // NOI18N
        Copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyActionPerformed(evt);
            }
        });
        Edit.add(Copy);

        Paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        Paste.setText(bundle.getString("Editor.Paste.text")); // NOI18N
        Paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteActionPerformed(evt);
            }
        });
        Edit.add(Paste);

        SelectAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        SelectAll.setText(bundle.getString("Editor.SelectAll.text")); // NOI18N
        SelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAllActionPerformed(evt);
            }
        });
        Edit.add(SelectAll);
        Edit.add(jSeparator2);

        Delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Delete.setText(bundle.getString("Editor.Delete.text")); // NOI18N
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        Edit.add(Delete);

        MenuBar.add(Edit);

        Simulation.setMnemonic('S');
        Simulation.setText(bundle.getString("Editor.Simulation.text")); // NOI18N
        MenuBar.add(Simulation);

        Window.setMnemonic('W');
        Window.setText(bundle.getString("Editor.Window.text")); // NOI18N
        MenuBar.add(Window);

        Help.setMnemonic('H');
        Help.setText(bundle.getString("Editor.Help.text")); // NOI18N

        About.setText(bundle.getString("Editor.About.text")); // NOI18N
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        Help.add(About);

        MenuBar.add(Help);

        setJMenuBar(MenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    
private void SelectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectionMouseClicked
    toggleToolboxButton(Selection);
    //getActiveCircuit().selectTool("Select");
}//GEN-LAST:event_SelectionMouseClicked

private void WireMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WireMouseClicked
    //getActiveCircuit().selectTool("Components.Standard.Wire");
    toggleToolboxButton(Wire);
}//GEN-LAST:event_WireMouseClicked

private void ComponentSelectionTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_ComponentSelectionTreeValueChanged
    TreePath currentSelection = ComponentSelectionTree.getSelectionPath();
    if(currentSelection != null){
        Object[] nameArray = currentSelection.getPath();
        String componentName = new String();
        for(int i = 0; i<nameArray.length; i++){
            componentName += nameArray[i] + ".";
        }
        componentName = componentName.substring(0, componentName.length() - 1);
        
        // Set Options panel (Preview, Component Specific Options etc.)
        ((OptionsPanel) Options).setComponentByName(componentName);
        Options.repaint();
               
        // Update the circuit
        makeToolSelection();
        
        toggleToolboxButton(InsertComponent);
        
        repaint();
    }
    
}//GEN-LAST:event_ComponentSelectionTreeValueChanged

private void InsertComponentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InsertComponentMouseClicked
    toggleToolboxButton(InsertComponent);    
}//GEN-LAST:event_InsertComponentMouseClicked

private void UndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoActionPerformed
    cmdHist.undo();
}//GEN-LAST:event_UndoActionPerformed

private void RedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedoActionPerformed
    cmdHist.redo();
}//GEN-LAST:event_RedoActionPerformed

private void CutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_CutActionPerformed

private void CopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_CopyActionPerformed

private void PasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_PasteActionPerformed

private void SelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAllActionPerformed
    getActiveCircuit().selectAllComponents();
}//GEN-LAST:event_SelectAllActionPerformed

private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
    System.exit(0);
}//GEN-LAST:event_ExitActionPerformed

private void ClearCircuitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearCircuitMouseClicked
    cmdHist.doCommand(new ClearCircuitCommand());
}//GEN-LAST:event_ClearCircuitMouseClicked

private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
    cmdHist.doCommand(new FileOpenCommand());
}//GEN-LAST:event_OpenActionPerformed

private void SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsActionPerformed
    cmdHist.doCommand(new FileSaveAsCommand());
}//GEN-LAST:event_SaveAsActionPerformed

private void AddLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddLabelMouseClicked
     cmdHist.doCommand(new AddLabelCommand());    
}//GEN-LAST:event_AddLabelMouseClicked

private void UndoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UndoButtonMouseClicked
    cmdHist.undo();
}//GEN-LAST:event_UndoButtonMouseClicked

private void RedoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RedoButtonMouseClicked
    cmdHist.redo();
}//GEN-LAST:event_RedoButtonMouseClicked

private void RotateLeftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RotateLeftMouseClicked
    cmdHist.doCommand(new RotateLeftCommand());
}//GEN-LAST:event_RotateLeftMouseClicked

private void RotateRghtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RotateRghtMouseClicked
    cmdHist.doCommand(new RotateRightCommand());
}//GEN-LAST:event_RotateRghtMouseClicked

private void jButton19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton19MouseClicked
    cmdHist.doCommand(new DeleteSelectionCommand());
}//GEN-LAST:event_jButton19MouseClicked

private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
    cmdHist.doCommand(new DeleteSelectionCommand());
}//GEN-LAST:event_DeleteActionPerformed

private void OpenFileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpenFileButtonMouseClicked
    cmdHist.doCommand(new FileOpenCommand());
}//GEN-LAST:event_OpenFileButtonMouseClicked

private void SaveAsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveAsButtonMouseClicked
    cmdHist.doCommand(new FileSaveAsCommand());
}//GEN-LAST:event_SaveAsButtonMouseClicked

private void Wire2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Wire2MouseClicked
// TODO add your handling code here:
}//GEN-LAST:event_Wire2MouseClicked

private void Wire1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Wire1MouseClicked
// TODO add your handling code here:
}//GEN-LAST:event_Wire1MouseClicked

private void SaveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveButtonMouseClicked
    cmdHist.doCommand(new FileSaveCommand());
}//GEN-LAST:event_SaveButtonMouseClicked

private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
    cmdHist.doCommand(new FileSaveCommand());
}//GEN-LAST:event_SaveActionPerformed

private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
    if (aboutVersionLabel == null) {
            aboutVersionLabel = new JLabel();
            aboutVersionLabel.setText("Version 1.0");
            aboutVersionLabel.setHorizontalAlignment(SwingConstants.CENTER);
    }
    
    if (aboutContentPane == null) {
        aboutContentPane = new JPanel();
        aboutContentPane.setLayout(new BorderLayout());
        aboutContentPane.add(aboutVersionLabel, BorderLayout.CENTER);
    }
    
    if (aboutDialog == null) {
        aboutDialog = new JDialog(Editor.this, true);
        aboutDialog.setTitle("About");
        aboutDialog.setContentPane(aboutContentPane);
    }
    aboutDialog.pack();
    aboutDialog.setVisible(true);
}//GEN-LAST:event_AboutActionPerformed

private void NewButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewButtonMouseClicked
    cmdHist.doCommand(new NewCircuitCommand());
}//GEN-LAST:event_NewButtonMouseClicked
    
    private void toggleToolboxButton(JButton b){
        // Reset Selections
        Selection.setSelected(false);
        Wire.setSelected(false);
        InsertComponent.setSelected(false);

        // Select this button
        b.setSelected(true);
    }

    public CircuitPanel getActiveCircuit() {
        return circuitPanel;
    }

    public CircuitPanel newCircuit() {
        CircuitFrame cir = new CircuitFrame(this);
        circuitwindows.add(cir);
        DesktopPane.add(cir, javax.swing.JLayeredPane.DEFAULT_LAYER);
        setActiveCircuit(cir.getCircuitPanel());
        return circuitPanel;
        
    }

    public void setActiveCircuit(CircuitPanel circuit) {
        circuitPanel = circuit;
        this.setTitle("Logic Circuit Workbench - " + circuitPanel.getFilename());
        DesktopPane.setSelectedFrame(circuitPanel.getParentFrame());
              
    }

    /**
     * Construct the component tree from the list of netlists associated with this editor.
     * 
     * @return rootNode     A well-formed TreeModel for use in a JTree
     */
    public TreeModel getTreeValues(){
        
        DefaultMutableTreeNode parent, rootNode = new DefaultMutableTreeNode("Components");
        String[] nodes = null;
        parent = rootNode;
        
        for(Netlist nl: netlists){
            for(String s: nl.keySet()){
                nodes = s.split("\\.");
                parent = rootNode;
                for(int i=0; i<nodes.length; i++){
                    DefaultMutableTreeNode mtn = new DefaultMutableTreeNode(nodes[i]);
                    
                    // This node does not exist, create a new node
                    Enumeration children = parent.children();
                    Boolean exists = false;
                    whileBreak: while(children.hasMoreElements()){
                        DefaultMutableTreeNode next = (DefaultMutableTreeNode) children.nextElement();
                        if(next.getUserObject().equals(mtn.getUserObject())){ // Compare String names of the nodes
                            exists = true;
                            mtn = next;
                            break whileBreak;
                        }
                    }
                    if(!exists){
                        parent.add(mtn);                    
                    }
                        
                    // We already have this node, move to the child
                    parent = mtn;            

                }
                    
            }            
        }
              
        return new DefaultTreeModel(rootNode);
    }
    
    public void addNetlist(Netlist nl){
        this.netlists.add(nl);
    }
    
    @SuppressWarnings("unchecked")
    public Class<? extends SelectableComponent> getNetlistComponent(String key){
        //Remove "Components." from begining
        if(key.length() > 11 && key.subSequence(0, 11).equals("Components.")){
            key = key.substring(11); 
        }
        for(Netlist nl: netlists){
            if(nl.containsKey(key)){
                return nl.getClass(key);
            }
        }
        
        return null;
    }
    
    /**
     * Get the current selection from the options panel and add the component to the current active circuit
     */
    public void makeToolSelection(){
        if(circuitPanel != null){
            //circuitPanel.removeUnFixedComponents();
            cmdHist.doCommand(new AddComponentCommand(((OptionsPanel) Options).getSelectableComponent()));
        }
    }
    
    /**
     * Fix the current component to the circuit
     * 
     * @param endPoint  the point at which to fix the component
     */
    public void fixSelection(SelectableComponent old, Point endPoint) {
        cmdHist.doCommand(new FixComponentCommand(old, ((OptionsPanel) Options).getSelectableComponent(), endPoint));
    }
    
    public OptionsPanel getOptionsPanel(){
        return (OptionsPanel) Options;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       // TODO case analysis for non-windows environments
        try {
           UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
           //UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
            //UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            //UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
        } 
        catch (Exception e) {
           e.printStackTrace();
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About;
    private javax.swing.JButton AddLabel;
    private javax.swing.JButton ClearCircuit;
    private javax.swing.JTree ComponentSelectionTree;
    private javax.swing.JMenuItem Copy;
    private javax.swing.JMenuItem Cut;
    private javax.swing.JMenuItem Delete;
    private javax.swing.JDesktopPane DesktopPane;
    private javax.swing.JMenu Edit;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu File;
    private javax.swing.JMenu Help;
    private javax.swing.JButton InsertComponent;
    private javax.swing.JScrollPane MainScrollPane;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JButton NewButton;
    private javax.swing.JMenuItem Open;
    private javax.swing.JButton OpenFileButton;
    private javax.swing.JPanel Options;
    private javax.swing.JPanel Options1;
    private javax.swing.JMenuItem Paste;
    private javax.swing.JPanel Preview1;
    private javax.swing.JMenuItem Redo;
    private javax.swing.JButton RedoButton;
    private javax.swing.JButton RotateLeft;
    private javax.swing.JButton RotateRght;
    private javax.swing.JMenuItem Save;
    private javax.swing.JMenuItem SaveAs;
    private javax.swing.JButton SaveAsButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JMenuItem SelectAll;
    private javax.swing.JButton Selection;
    private javax.swing.JMenu Simulation;
    private javax.swing.JToolBar Toolbar;
    private javax.swing.JInternalFrame Toolbox;
    private javax.swing.JMenuItem Undo;
    private javax.swing.JButton UndoButton;
    private javax.swing.JMenu Window;
    private javax.swing.JButton Wire;
    private javax.swing.JButton Wire1;
    private javax.swing.JButton Wire2;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private javax.swing.JDialog aboutDialog = null;
    private javax.swing.JPanel aboutContentPane = null;
    private javax.swing.JLabel aboutVersionLabel = null;
    
    private CommandHistory cmdHist = new CommandHistory(this);
    private LinkedList<JInternalFrame> circuitwindows = new LinkedList<JInternalFrame>();
    
}